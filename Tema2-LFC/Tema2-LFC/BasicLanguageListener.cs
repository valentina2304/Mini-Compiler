//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from BasicLanguage.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="BasicLanguageParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface IBasicLanguageListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicLanguageParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] BasicLanguageParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicLanguageParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] BasicLanguageParser.ProgramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicLanguageParser.globalVariableDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGlobalVariableDecl([NotNull] BasicLanguageParser.GlobalVariableDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicLanguageParser.globalVariableDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGlobalVariableDecl([NotNull] BasicLanguageParser.GlobalVariableDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicLanguageParser.functionDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionDecl([NotNull] BasicLanguageParser.FunctionDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicLanguageParser.functionDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionDecl([NotNull] BasicLanguageParser.FunctionDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicLanguageParser.paramList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParamList([NotNull] BasicLanguageParser.ParamListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicLanguageParser.paramList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParamList([NotNull] BasicLanguageParser.ParamListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicLanguageParser.param"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParam([NotNull] BasicLanguageParser.ParamContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicLanguageParser.param"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParam([NotNull] BasicLanguageParser.ParamContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicLanguageParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock([NotNull] BasicLanguageParser.BlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicLanguageParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock([NotNull] BasicLanguageParser.BlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicLanguageParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] BasicLanguageParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicLanguageParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] BasicLanguageParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicLanguageParser.variableDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableDecl([NotNull] BasicLanguageParser.VariableDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicLanguageParser.variableDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableDecl([NotNull] BasicLanguageParser.VariableDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicLanguageParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfStatement([NotNull] BasicLanguageParser.IfStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicLanguageParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfStatement([NotNull] BasicLanguageParser.IfStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicLanguageParser.whileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhileStatement([NotNull] BasicLanguageParser.WhileStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicLanguageParser.whileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhileStatement([NotNull] BasicLanguageParser.WhileStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicLanguageParser.forStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForStatement([NotNull] BasicLanguageParser.ForStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicLanguageParser.forStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForStatement([NotNull] BasicLanguageParser.ForStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicLanguageParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnStatement([NotNull] BasicLanguageParser.ReturnStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicLanguageParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnStatement([NotNull] BasicLanguageParser.ReturnStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicLanguageParser.exprStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprStatement([NotNull] BasicLanguageParser.ExprStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicLanguageParser.exprStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprStatement([NotNull] BasicLanguageParser.ExprStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicLanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpr([NotNull] BasicLanguageParser.ExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicLanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpr([NotNull] BasicLanguageParser.ExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicLanguageParser.assignmentExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentExpr([NotNull] BasicLanguageParser.AssignmentExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicLanguageParser.assignmentExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentExpr([NotNull] BasicLanguageParser.AssignmentExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicLanguageParser.logicalExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogicalExpr([NotNull] BasicLanguageParser.LogicalExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicLanguageParser.logicalExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogicalExpr([NotNull] BasicLanguageParser.LogicalExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicLanguageParser.relationalExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelationalExpr([NotNull] BasicLanguageParser.RelationalExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicLanguageParser.relationalExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelationalExpr([NotNull] BasicLanguageParser.RelationalExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicLanguageParser.additiveExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdditiveExpr([NotNull] BasicLanguageParser.AdditiveExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicLanguageParser.additiveExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdditiveExpr([NotNull] BasicLanguageParser.AdditiveExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicLanguageParser.multiplicativeExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiplicativeExpr([NotNull] BasicLanguageParser.MultiplicativeExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicLanguageParser.multiplicativeExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiplicativeExpr([NotNull] BasicLanguageParser.MultiplicativeExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicLanguageParser.unaryExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryExpr([NotNull] BasicLanguageParser.UnaryExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicLanguageParser.unaryExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryExpr([NotNull] BasicLanguageParser.UnaryExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicLanguageParser.postfixExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPostfixExpr([NotNull] BasicLanguageParser.PostfixExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicLanguageParser.postfixExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPostfixExpr([NotNull] BasicLanguageParser.PostfixExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicLanguageParser.primaryExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimaryExpr([NotNull] BasicLanguageParser.PrimaryExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicLanguageParser.primaryExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimaryExpr([NotNull] BasicLanguageParser.PrimaryExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicLanguageParser.exprList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprList([NotNull] BasicLanguageParser.ExprListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicLanguageParser.exprList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprList([NotNull] BasicLanguageParser.ExprListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicLanguageParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType([NotNull] BasicLanguageParser.TypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicLanguageParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType([NotNull] BasicLanguageParser.TypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicLanguageParser.assignmentOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentOp([NotNull] BasicLanguageParser.AssignmentOpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicLanguageParser.assignmentOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentOp([NotNull] BasicLanguageParser.AssignmentOpContext context);
}
