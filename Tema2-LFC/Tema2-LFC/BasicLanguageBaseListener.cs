//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from BasicLanguage.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IBasicLanguageListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class BasicLanguageBaseListener : IBasicLanguageListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicLanguageParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgram([NotNull] BasicLanguageParser.ProgramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicLanguageParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgram([NotNull] BasicLanguageParser.ProgramContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicLanguageParser.globalVariableDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGlobalVariableDecl([NotNull] BasicLanguageParser.GlobalVariableDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicLanguageParser.globalVariableDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGlobalVariableDecl([NotNull] BasicLanguageParser.GlobalVariableDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicLanguageParser.functionDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionDecl([NotNull] BasicLanguageParser.FunctionDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicLanguageParser.functionDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionDecl([NotNull] BasicLanguageParser.FunctionDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicLanguageParser.paramList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParamList([NotNull] BasicLanguageParser.ParamListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicLanguageParser.paramList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParamList([NotNull] BasicLanguageParser.ParamListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicLanguageParser.param"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParam([NotNull] BasicLanguageParser.ParamContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicLanguageParser.param"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParam([NotNull] BasicLanguageParser.ParamContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicLanguageParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] BasicLanguageParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicLanguageParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] BasicLanguageParser.BlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicLanguageParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] BasicLanguageParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicLanguageParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] BasicLanguageParser.StatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicLanguageParser.variableDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableDecl([NotNull] BasicLanguageParser.VariableDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicLanguageParser.variableDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableDecl([NotNull] BasicLanguageParser.VariableDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicLanguageParser.ifStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfStatement([NotNull] BasicLanguageParser.IfStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicLanguageParser.ifStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfStatement([NotNull] BasicLanguageParser.IfStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicLanguageParser.whileStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileStatement([NotNull] BasicLanguageParser.WhileStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicLanguageParser.whileStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileStatement([NotNull] BasicLanguageParser.WhileStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicLanguageParser.forStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForStatement([NotNull] BasicLanguageParser.ForStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicLanguageParser.forStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForStatement([NotNull] BasicLanguageParser.ForStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicLanguageParser.returnStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnStatement([NotNull] BasicLanguageParser.ReturnStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicLanguageParser.returnStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnStatement([NotNull] BasicLanguageParser.ReturnStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicLanguageParser.exprStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExprStatement([NotNull] BasicLanguageParser.ExprStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicLanguageParser.exprStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExprStatement([NotNull] BasicLanguageParser.ExprStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicLanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpr([NotNull] BasicLanguageParser.ExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicLanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpr([NotNull] BasicLanguageParser.ExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicLanguageParser.assignmentExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignmentExpr([NotNull] BasicLanguageParser.AssignmentExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicLanguageParser.assignmentExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignmentExpr([NotNull] BasicLanguageParser.AssignmentExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicLanguageParser.logicalExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogicalExpr([NotNull] BasicLanguageParser.LogicalExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicLanguageParser.logicalExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogicalExpr([NotNull] BasicLanguageParser.LogicalExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicLanguageParser.relationalExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelationalExpr([NotNull] BasicLanguageParser.RelationalExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicLanguageParser.relationalExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelationalExpr([NotNull] BasicLanguageParser.RelationalExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicLanguageParser.additiveExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAdditiveExpr([NotNull] BasicLanguageParser.AdditiveExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicLanguageParser.additiveExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAdditiveExpr([NotNull] BasicLanguageParser.AdditiveExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicLanguageParser.multiplicativeExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiplicativeExpr([NotNull] BasicLanguageParser.MultiplicativeExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicLanguageParser.multiplicativeExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiplicativeExpr([NotNull] BasicLanguageParser.MultiplicativeExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicLanguageParser.unaryExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryExpr([NotNull] BasicLanguageParser.UnaryExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicLanguageParser.unaryExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryExpr([NotNull] BasicLanguageParser.UnaryExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicLanguageParser.postfixExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPostfixExpr([NotNull] BasicLanguageParser.PostfixExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicLanguageParser.postfixExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPostfixExpr([NotNull] BasicLanguageParser.PostfixExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicLanguageParser.primaryExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimaryExpr([NotNull] BasicLanguageParser.PrimaryExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicLanguageParser.primaryExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimaryExpr([NotNull] BasicLanguageParser.PrimaryExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicLanguageParser.exprList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExprList([NotNull] BasicLanguageParser.ExprListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicLanguageParser.exprList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExprList([NotNull] BasicLanguageParser.ExprListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicLanguageParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType([NotNull] BasicLanguageParser.TypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicLanguageParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType([NotNull] BasicLanguageParser.TypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="BasicLanguageParser.assignmentOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignmentOp([NotNull] BasicLanguageParser.AssignmentOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="BasicLanguageParser.assignmentOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignmentOp([NotNull] BasicLanguageParser.AssignmentOpContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
