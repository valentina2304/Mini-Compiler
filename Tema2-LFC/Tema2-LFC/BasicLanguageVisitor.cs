//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from BasicLanguage.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="BasicLanguageParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface IBasicLanguageVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] BasicLanguageParser.ProgramContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.globalVariableDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGlobalVariableDecl([NotNull] BasicLanguageParser.GlobalVariableDeclContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.functionDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionDecl([NotNull] BasicLanguageParser.FunctionDeclContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.paramList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParamList([NotNull] BasicLanguageParser.ParamListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.param"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParam([NotNull] BasicLanguageParser.ParamContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] BasicLanguageParser.BlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] BasicLanguageParser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.variableDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableDecl([NotNull] BasicLanguageParser.VariableDeclContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStatement([NotNull] BasicLanguageParser.IfStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.whileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileStatement([NotNull] BasicLanguageParser.WhileStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.forStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForStatement([NotNull] BasicLanguageParser.ForStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnStatement([NotNull] BasicLanguageParser.ReturnStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.exprStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprStatement([NotNull] BasicLanguageParser.ExprStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpr([NotNull] BasicLanguageParser.ExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.assignmentExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignmentExpr([NotNull] BasicLanguageParser.AssignmentExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.logicalExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogicalExpr([NotNull] BasicLanguageParser.LogicalExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.relationalExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRelationalExpr([NotNull] BasicLanguageParser.RelationalExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.additiveExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAdditiveExpr([NotNull] BasicLanguageParser.AdditiveExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.multiplicativeExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiplicativeExpr([NotNull] BasicLanguageParser.MultiplicativeExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.unaryExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnaryExpr([NotNull] BasicLanguageParser.UnaryExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.postfixExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPostfixExpr([NotNull] BasicLanguageParser.PostfixExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.primaryExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimaryExpr([NotNull] BasicLanguageParser.PrimaryExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.exprList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprList([NotNull] BasicLanguageParser.ExprListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType([NotNull] BasicLanguageParser.TypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.assignmentOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignmentOp([NotNull] BasicLanguageParser.AssignmentOpContext context);
}
